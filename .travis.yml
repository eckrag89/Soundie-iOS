language: swift
before_install:
  - brew update > /dev/null; if brew outdated | grep -qx xctool; then brew upgrade xctool; fi  # Ensure that xctool is up-to-date
before_script:
  - chmod +x travis/build.sh travis/add-key.sh travis/remove-key.sh travis/distribute.sh  # Ensure that scripts are executable
  - ./travis/add-key.sh  # Import any keys and certificates into the keychain.
script: ./travis/build.sh  # Primary (simulator) build & test.
after_success:
  - ./travis/distribute.sh  # On main-repo builds (after merge, etc.), distribute to TestFlight, iTunes Connect, etc.
after_script:
  - ./travis/remove-key.sh  # Nuke the keychain.
env:
  global:
  - XC_WORKSPACE="Soundie.xcworkspace"  # Put your workspace filename (or path relative to the root of the repo) here.
  - XC_PROJECT="Soundie.xcodeproj"  # Put your project filename (or path relative to the root of the repo) here.
  - XC_SCHEME="Soundie Ad-Hoc"  # Put your SHARED scheme name here.
  - XC_CONFIGURATION="Ad-Hoc"  # Put your build configuration name here.
  - SDK_VERSION=8.0
  - APPNAME="Soundie"  # Put your app name here.
  - TESTFLIGHT_API_TOKEN="FIXME"  # Put your Old TestFlight API Token here.
  - TESTFLIGHT_TEAM_TOKEN="FIXME"  # Put your Old TestFlight Team Token here.
  - ITUNES_CONNECT_ACCOUNT="FIXME"  # Put the iTunes Connect login (email address) here.
  - ITUNES_CONNECT_APPLE_ID="FIXME"  # Put the iTunes Connect Apple ID here.
git:
  depth: 10000  # For the auto-incrementing build number script to work, we need to clone with a basically-infinite depth.
cache: bundler  # After main-repo builds, save the "bundler" (local Ruby gems) stuff to cache for future builds.
addons:
  artifacts:  # Artifacts are only uploaded on main-repo builds, not pull requests.
    paths:
    - $TRAVIS_BUILD_DIR/$APPNAME.ipa
    - $TRAVIS_BUILD_DIR/$APPNAME.app.dSYM.zip
    key: AKIAJVXNWLRNIG5NSUPQ
    secret: 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
    bucket: vokaltravis